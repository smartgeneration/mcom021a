# -*- coding: utf-8 -*-
"""neural-networks-with-scikit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ybzDA-WmLng9iQINzbuWNHaeZ_Tw7jPJ
"""

# https://python-course.eu/machine-learning/neural-networks-with-scikit.php
# Nạp tập dữ liệu iris có trong thư viện scikit-learn
from sklearn.datasets import load_iris

iris = load_iris()

# splitting into train and test datasets
# Phân tách tập đọc vào thành 2 phần huấn luyện và kiểm tra
from sklearn.model_selection import train_test_split
datasets = train_test_split(iris.data, iris.target,
                            test_size=0.2) # train_test_split là hàm trích xuất đặc trưng
# datasets: là mảng 2 chiều lưu dữ liệu theo thứ tự: sepal length, sepal width, petal length, petal width
train_data, test_data, train_labels, test_labels = datasets # data: dữ liệu đầu vào, label: nhãn (class)

# scaling the data - chuẩn hóa dữ liệu
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()

# we fit the train data
scaler.fit(train_data)

# scaling the train data
train_data = scaler.transform(train_data)
test_data = scaler.transform(test_data)

print(train_data[:3])

# Ghi du lieu huan luyen vao file
import pandas as pd

df = pd.DataFrame(train_data)
df.to_csv('data/train_data.csv')
# Ghi nhan huan luyen vao file
df = pd.DataFrame(train_labels)
df.to_csv('data/train_labels.csv')

# Ghi du lieu kiem tra vao file
df = pd.DataFrame(test_data)
df.to_csv('data/test_data.csv')
# Ghi nhan kiem tra vao file
df = pd.DataFrame(test_labels)
df.to_csv('data/test_labels.csv')

# Training the Model
from sklearn.neural_network import MLPClassifier
# creating an classifier from the model:
mlp = MLPClassifier(hidden_layer_sizes=(10, 5), max_iter=1000)

# let's fit the training data to our model
mlp.fit(train_data, train_labels)

from sklearn.metrics import accuracy_score

predictions_train = mlp.predict(train_data)
print(accuracy_score(predictions_train, train_labels))
predictions_test = mlp.predict(test_data)
print(accuracy_score(predictions_test, test_labels))

from sklearn.metrics import confusion_matrix

confusion_matrix(predictions_train, train_labels)

confusion_matrix(predictions_test, test_labels)

from sklearn.metrics import classification_report

print(classification_report(predictions_test, test_labels))